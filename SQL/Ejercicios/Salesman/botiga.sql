-- MySQL Script generated by MySQL Workbench
-- Tue Oct 22 12:32:28 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';


CREATE SCHEMA IF NOT EXISTS `botiga` DEFAULT CHARACTER SET utf8 ;
USE `botiga` ;

CREATE TABLE IF NOT EXISTS `botiga`.`salesman` (
  `salesman_id` SMALLINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NULL,
  `city` VARCHAR(15) NULL,
  `commission` DECIMAL(5,2) NULL,
  PRIMARY KEY (`salesman_id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `botiga`.`customer` (
	`customer_id` INT NOT NULL auto_increment,
    `cust_name` varchar(30) NULL,
    `city` VARCHAR(15) NULL,
    `grade` DECIMAL(3) NULL,
    PRIMARY KEY (`customer_id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `botiga`.`orders` (
  `ord_no` INT NOT NULL,
  `purch_atm` DECIMAL(8,2) NULL,
  `ord_date` DATE NULL,
  `customer_id` INT NOT NULL,
  `salesman_id` INT NOT NULL,
  PRIMARY KEY (`ord_no`, `customer_id`, `salesman_id`),
  INDEX `fk_orders_customer_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_orders_Salesman1_idx` (`salesman_id` ASC) VISIBLE,
  CONSTRAINT `fk_orders_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `botiga`.`customer` (`customer_id`) 
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_Salesman1`
    FOREIGN KEY (`salesman_id`)
    REFERENCES `botiga`.`salesman` (`salesman_id`) 
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO `botiga`.`salesman` (name, city, commission) VALUES
('ana_rodriguez', 'Barcelona', 45.50),
('carlos_fernandez', 'Madrid', 52.75),
('lucia_gomez', 'Valencia', 48.00),
('javier_martinez', 'Sevilla', 55.25),
('marta_lopez', 'Bilbao', 49.30),
('sergio_ruiz', 'Zaragoza', 47.00),
('pilar_blanco', 'Malaga', 50.00),
('david_moreno', 'Murcia', 46.80),
('laura_garcia', 'Alicante', 51.00),
('juan_hernandez', 'Cordoba', 53.20);

INSERT INTO `botiga`.`customer` (cust_name, city, grade) VALUES
('Maria_Sanchez', 'Barcelona', 90),
('Pedro_Garcia', 'Madrid', 85),
('Ana_Lopez', 'Valencia', 78),
('Juan_Martinez', 'Sevilla', 88),
('Laura_Gonzalez', 'Bilbao', 92),
('Sergio_Rodriguez', 'Zaragoza', 80),
('Paula_Fernandez', 'Malaga', 95),
('Luis_Herrera', 'Murcia', 87),
('Clara_Ramos', 'Alicante', 83),
('Carlos_Diaz', 'Cordoba', 89);

INSERT INTO `botiga`.`orders` (ord_no, purch_atm, ord_date, customer_id, salesman_id) VALUES
(1001, 500.75, '2024-01-10', 1, 1),
(1002, 750.00, '2024-02-15', 2, 2),
(1003, 250.50, '2024-03-20', 3, 3),
(1004, 920.00, '2024-04-25', 4, 4),
(1005, 375.30, '2024-05-30', 5, 5),
(1006, 480.00, '2024-06-05', 6, 6),
(1007, 540.50, '2024-07-10', 7, 7),
(1008, 310.00, '2024-08-15', 8, 8),
(1009, 630.75, '2024-09-20', 9, 9),
(1010, 290.40, '2024-10-25', 10, 10);

-- Contar el total de Ventas
select count(*) from orders;

-- Mostrar los distintos clientes
SELECT DISTINCT cust_name FROM customer;

-- Mostrar los vendedores que han hecho más ventas
SELECT s.name AS Salesman_Name, 
       s.city AS City,
       SUM(o.purch_atm) AS Total_Sales
FROM salesman s
JOIN orders o ON s.salesman_id = o.salesman_id
GROUP BY s.salesman_id
ORDER BY Total_Sales DESC;

-- Mostrar los clientes ordenados por id hasta un límite de 5
SELECT * FROM customer ORDER BY customer_id LIMIT 5;


-- Mostrar el mínimo y máximo de purch_atm 
SELECT MIN(purch_atm)AS 'PURCH_MENOS', max(purch_atm)AS 'PURCH_MAYOR'  FROM orders;
